package br.com.eng.entities;

import java.math.BigDecimal;

import br.com.eng.util.Services;
import javafx.scene.control.TextField;

public class LajeSemParede {
	
	BigDecimal lambda;
	BigDecimal ladoX;
	BigDecimal ladoY;
	BigDecimal caso;
	BigDecimal area;
	BigDecimal espessura;
	BigDecimal alturaPiso = new BigDecimal(0.02);
	BigDecimal alturaContraPiso = new BigDecimal(0.03);
	BigDecimal cargaTotalPositiva;
	BigDecimal cargaTotalNegativa;
	BigDecimal cargaPermanentePositiva;
	BigDecimal cargaPermanenteNegativa;
	BigDecimal cargaDeServicoPositiva;
	BigDecimal cargaDeServicoNegativa;
	BigDecimal cargaAcidental;
	BigDecimal psi;
	BigDecimal momentoDeFissuracao;
	BigDecimal momentoDeServico;
	BigDecimal inercia;
	BigDecimal coeficienteK;
	BigDecimal flechaDeCurtaDuracao;
	BigDecimal flechaDeLongaDuracao;
	BigDecimal flechaAdmissivel;
	BigDecimal momentoDeProjetoX;
	BigDecimal momentoDeProjetoY;
	BigDecimal momentoDeProjetoXLinha;
	BigDecimal momentoDeProjetoYLinha;
	BigDecimal d;
	BigDecimal x;
	BigDecimal y;
	BigDecimal xLinha;
	BigDecimal yLinha;
	BigDecimal areaDeAcoX;
	BigDecimal areaDeAcoXLinha;
	BigDecimal areaDeAcoY;
	BigDecimal areaDeAcoYLinha;
	BigDecimal areaDeAcoMinima;
	
	Services services = new Services();

	public LajeSemParede() {

	}
	
	public LajeSemParede(TextField ladoX, TextField ladoY, TextField espessura) {

		this.ladoX = services.conversor(ladoX);
		this.ladoY = services.conversor(ladoY);
		this.espessura = services.conversor(espessura);

	}
	
	public void calculaArea() {

		this.area = this.ladoX.multiply(this.ladoY);

	}
	
	public BigDecimal calculaCargaPermanente(Materiais materiais, Parede parede) {
		
		setEspessura(services.CentimetrosEmMetros(this.espessura));
		
		BigDecimal pesoProprio = materiais.getGamaConcreto().multiply(this.espessura);
		BigDecimal pesoPiso = materiais.gamaPiso.multiply(this.alturaPiso);
		BigDecimal pesoContraPiso = materiais.gamaContraPiso.multiply(this.alturaContraPiso);
		BigDecimal pesoForro = materiais.pesoForro;
		BigDecimal pesoParede = parede.calculaPesoDaParedePositiva();
		
		this.cargaPermanentePositiva = pesoProprio.add(pesoPiso).add(pesoContraPiso).add(pesoForro).add(pesoParede);
		
		return this.cargaPermanentePositiva;
		
	}
	
}